# 参考 https://github.com/zaggash/gh-workflows/blob/main/.github/workflows/action_aur_repo_build.yaml
name: Packages CI(part)

on:
  workflow_dispatch:
    inputs:
      directory:
        description: '待构建包的目录'
        required: false
        type: string
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - "Archived/**"
      - ".gitignore"
      - ".gitmodules"
      - "README.md"

jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: 导入 PKGBUILD
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: 生成数组
        id: generate-matrix
        run: |
          if [ -n "${{ github.event.inputs.directory }}" ]; then
            # 使用逗号分割数组
            dir=$(echo "${{ github.event.inputs.directory }}" | tr ',' '\n' | sort -u)
          else
            file=$(git log -1 --name-only --pretty=format: | grep -v '^Archived/')
            if echo "$file" | grep -q '/'; then
              dir=$(echo "$file" | xargs -I {} dirname {} | sort -u)
            else
              dir="$file"
            fi
          fi
          MATRIX_JSON=$(echo "$dir" | jq -Rnc '[inputs] | {package: .}')
          echo ${MATRIX_JSON}
          echo "matrix=${MATRIX_JSON}" >> $GITHUB_OUTPUT

  build_packages:
    needs: metadata
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
    continue-on-error: true
    strategy:
      max-parallel: 5
      matrix: ${{ fromJson(needs.metadata.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: 安装依赖
        run: |
          # * https://github.com/actions/runner/issues/2058
          echo "REPO_FOLDER=$GITHUB_WORKSPACE/repo/x86_64" >> $GITHUB_ENV
          # 添加构建工具
          pacman -Syyuu --noconfirm --needed --ignore filesystem git pacman-contrib curl

      - name: 导入 PKGBUILD
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: 配置环境
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        run: |
          # 配置 makepkg.conf: 取消生成 debug 包、添加打包者信息
          sed -i 's#\(^OPTIONS.*\)\(debug\)\(.*\)#\1!\2\3#' /etc/makepkg.conf
          echo 'PACKAGER="yidaduizuoye <yidaduizuoye@outlook.com>"' >> /etc/makepkg.conf

          # 配置非 root 用户
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/builder

          # 配置 GPG key 签名仓库
          echo -n "$GPG_SIGNING_KEY" | sudo -u builder gpg --import

          # 导入本项目 AUR 仓库
          sed -i '$a \[zuoye-aur]\nServer = https://repo.zuoye.win/archlinux/$arch' /etc/pacman.conf
          echo -n "$GPG_PUBLIC_KEY" | pacman-key -a -
          pacman-key --init
          pacman-key --lsign-key 62FFE3FEF4158CF1
          pacman -Syy

          # 配置仓库文件结构
          mkdir -p ${REPO_FOLDER}
          chown -R builder:builder ./

      - name: 恢复 paru 缓存
        id: cache-paru
        uses: actions/cache/restore@v4
        with:
          path: /usr/bin/paru
          key: paru-cache

      - name: 构建安装 paru
        if: steps.cache-paru.outputs.cache-hit != 'true'
        working-directory: /tmp
        run: |
          sudo -u builder git clone https://aur.archlinux.org/paru.git
          cd paru
          sudo -u builder makepkg -si --noconfirm --needed
          sudo -u builder paru --version

      - name: 构建 ${{ matrix.package }}
        id: build-package
        working-directory: ./${{ matrix.package }}
        continue-on-error: true
        run: |
          # 安装依赖
          sudo -u builder paru -Sy --noconfirm \
            $(pacman --deptest \
              $(source ./PKGBUILD &&\
              echo ${depends[@]} ${checkdepends[@]} ${makedepends[@]}))
          # 验证文件完整性
          sudo -u builder updpkgsums
          # 开始构建
          sudo -u builder PKGDEST=${REPO_FOLDER} makepkg -f --sign

      - name: 构建失败通知
        if: steps.build-package.outcome == 'failure'
        run: |
          curl "https://${{ secrets.SERVERCHAN_UID }}.push.ft07.com/send/${{ secrets.SERVERCHAN_SENDKEY }}.send" \
            --data-urlencode "tags=myAUR 构建通知" \
            --data-urlencode "title=${{ matrix.package }} 构建失败"

      - name: 处理产物文件名 #limitation on name for epoch https://github.com/actions/upload-artifact/issues/22#issuecomment-568561966
        run: |
          # || [ "$?" = "4" ] // I do not want to exit if nothing was renamed
          rename ':' '.' ${REPO_FOLDER}/*.pkg.tar.* || [ "$?" == "4" ]

      - name: 将构建产物上传至 artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.package }}
          path: ${{ env.REPO_FOLDER }}/
          retention-days: 1

  build_repo:
    needs: build_packages
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
    steps:
      - name: 下载构建产物
        id: restore
        uses: actions/download-artifact@v4
        with:
          pattern: package-*
          merge-multiple: true

      - name: 导入 GPG 密钥
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: 清除旧软件包数据
        env:
          REPO_NAME: zuoye-aur
        run: |
          curl -O https://repo.zuoye.win/archlinux/x86_64/zuoye-aur.db.tar.gz || true
          curl -O https://repo.zuoye.win/archlinux/x86_64/zuoye-aur.files.tar.gz || true
          for pkg in ./*.pkg.tar.zst; do
            PKGNAME=$(bsdtar -Oxf "$pkg" .PKGINFO | awk -F'= ' '/^pkgname/ {print $2}')
            repo-remove $(basename $REPO_NAME).db.tar.gz "$PKGNAME" || true
          done

      - name: 添加新软件包数据
        env:
          REPO_NAME: zuoye-aur
        run: repo-add --sign $(basename $REPO_NAME).db.tar.gz ./*.pkg.tar.zst

      - name: 上传至 R2 存储桶
        uses: ryand56/r2-upload-action@v1.3.4
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: ${{ github.workspace }}
          destination-dir: archlinux/x86_64
          keep-file-fresh: false
